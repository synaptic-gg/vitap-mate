// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
import 'package:meta/meta.dart' as meta;
part 'types.freezed.dart';
part 'types.g.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`

@freezed
@meta.immutable
sealed class AttendanceData with _$AttendanceData {
  const factory AttendanceData({
    required List<AttendanceRecord> records,
    required String semesterId,
    required BigInt updateTime,
  }) = _AttendanceData;
}

@freezed
@meta.immutable
sealed class AttendanceRecord with _$AttendanceRecord {
  const factory AttendanceRecord({
    required String serial,
    required String category,
    required String courseName,
    required String courseCode,
    required String courseType,
    required String facultyDetail,
    required String classesAttended,
    required String totalClasses,
    required String attendancePercentage,
    required String attendenceFatCat,
    required String debarStatus,
    required String courseId,
  }) = _AttendanceRecord;
}

@freezed
@meta.immutable
sealed class ExamScheduleData with _$ExamScheduleData {
  const factory ExamScheduleData({
    required List<PerExamScheduleRecord> exams,
    required String semesterId,
    required BigInt updateTime,
  }) = _ExamScheduleData;
}

@freezed
@meta.immutable
sealed class ExamScheduleRecord with _$ExamScheduleRecord {
  const factory ExamScheduleRecord({
    required String serial,
    required String slot,
    required String courseName,
    required String courseCode,
    required String courseType,
    required String courseId,
    required String examDate,
    required String examSession,
    required String reportingTime,
    required String examTime,
    required String venue,
    required String seatLocation,
    required String seatNo,
  }) = _ExamScheduleRecord;
}

@freezed
@meta.immutable
sealed class FullAttendanceData with _$FullAttendanceData {
  const factory FullAttendanceData({
    required List<FullAttendanceRecord> records,
    required String semesterId,
    required BigInt updateTime,
    required String courseId,
    required String courseType,
  }) = _FullAttendanceData;
}

@freezed
@meta.immutable
sealed class FullAttendanceRecord with _$FullAttendanceRecord {
  const factory FullAttendanceRecord({
    required String serial,
    required String date,
    required String slot,
    required String dayTime,
    required String status,
    required String remark,
  }) = _FullAttendanceRecord;
}

@freezed
@meta.immutable
sealed class MarksData with _$MarksData {
  const factory MarksData({
    required List<MarksRecord> records,
    required String semesterId,
    required BigInt updateTime,
  }) = _MarksData;
}

@freezed
@meta.immutable
sealed class MarksRecord with _$MarksRecord {
  const factory MarksRecord({
    required String serial,
    required String coursecode,
    required String coursetitle,
    required String coursetype,
    required String faculity,
    required String slot,
    required List<MarksRecordEach> marks,
  }) = _MarksRecord;
}

@freezed
@meta.immutable
sealed class MarksRecordEach with _$MarksRecordEach {
  const factory MarksRecordEach({
    required String serial,
    required String markstitle,
    required String maxmarks,
    required String weightage,
    required String status,
    required String scoredmark,
    required String weightagemark,
    required String remark,
  }) = _MarksRecordEach;

  factory MarksRecordEach.fromJson(Map<String, dynamic> json) =>
      _$MarksRecordEachFromJson(json);
}

@freezed
@meta.immutable
sealed class PerExamScheduleRecord with _$PerExamScheduleRecord {
  const factory PerExamScheduleRecord({
    required List<ExamScheduleRecord> records,
    required String examType,
  }) = _PerExamScheduleRecord;
}

@freezed
@meta.immutable
sealed class SemesterData with _$SemesterData {
  const factory SemesterData({
    required List<SemesterInfo> semesters,
    required BigInt updateTime,
  }) = _SemesterData;
}

@freezed
@meta.immutable
sealed class SemesterInfo with _$SemesterInfo {
  const factory SemesterInfo({required String id, required String name}) =
      _SemesterInfo;
}

@freezed
@meta.immutable
sealed class TimetableData with _$TimetableData {
  const factory TimetableData({
    required List<TimetableSlot> slots,
    required String semesterId,
    required BigInt updateTime,
  }) = _TimetableData;
}

@freezed
@meta.immutable
sealed class TimetableSlot with _$TimetableSlot {
  const factory TimetableSlot({
    required String serial,
    required String day,
    required String slot,
    required String courseCode,
    required String courseType,
    required String roomNo,
    required String block,
    required String startTime,
    required String endTime,
    required String name,
    bool? isLab,
  }) = _TimetableSlot;
}
